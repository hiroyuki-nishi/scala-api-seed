AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  EnvName:
    Type: String
Mappings:
  EnvDomainNameMap:
    gray:
      DomainName: sample.nishiemon.tk
      HostedZoneName: nishiemon.tk.
      # 発行したCSM証明書(Cloudfrontで作成する場合、us-east1必須)
      SslARN: arn:aws:acm:us-east-1:933351349976:certificate/5afadef7-d4f3-4c4a-8506-f07a6bfccbdd
#      WebAclId: '(WebACLでアクセス制限するなら必要)'
Resources:
  # 1. CloudFrontOAI作成
  SampleSpaCloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub access-identity-sample-spa-${EnvName}
  # 2. Bucket作成
  SampleSpaBucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - SampleSpaCloudFrontOAI
    Properties:
      BucketName: !FindInMap [EnvDomainNameMap, !Ref EnvName, DomainName]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  # 3. BucketPolicy作成
  SampleSpaBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn:
      - SampleSpaCloudFrontOAI
    Properties:
      Bucket: !Ref SampleSpaBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Join ['', [!GetAtt [SampleSpaBucket, Arn], '/*']]
            Principal:
              CanonicalUser: !GetAtt SampleSpaCloudFrontOAI.S3CanonicalUserId
  # 4. CloudFrontの作成
  SampleSpaDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - SampleSpaCloudFrontOAI
      - SampleSpaBucket
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt SampleSpaBucket.RegionalDomainName
            Id: !FindInMap [EnvDomainNameMap, !Ref EnvName, DomainName]
            S3OriginConfig:
#              OriginAccessIdentity: !Join ['', ['origin-access-identity/cloudfront/', !Ref SampleSpaCloudFrontOAI]] # OAIの指定
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${SampleSpaCloudFrontOAI}
        DefaultCacheBehavior:
          TargetOriginId: !FindInMap [EnvDomainNameMap, !Ref EnvName, DomainName]
          ViewerProtocolPolicy: redirect-to-https
          MinTTL: 0
          MaxTTL: 31536000
          DefaultTTL: 0
          SmoothStreaming: false
          Compress: false
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
        PriceClass: PriceClass_200
        Aliases: [!FindInMap [EnvDomainNameMap, !Ref EnvName, DomainName]]
        ViewerCertificate:
          AcmCertificateArn: !FindInMap [EnvDomainNameMap, !Ref EnvName, SslARN]
          SslSupportMethod: sni-only
        HttpVersion: http1.1
        DefaultRootObject: index.html
        Logging:
          IncludeCookies: true
          Bucket: !Sub cloudfront-access-logs-${EnvName}.s3.amazonaws.com
          Prefix: !Sub '${EnvName}/logs/'
        Enabled: true
        Comment: SampleSPA
        CustomErrorResponses:
          - ErrorCode: 500
            ErrorCachingMinTTL: 300
#        WebACLId: !FindInMap [EnvDomainNameMap, !Ref EnvName, WebAclId] 必要であれば
  # Route53の作成
  SampleRoute53Record:
    Type: AWS::Route53::RecordSet
    DependsOn:
      - SampleSpaDistribution
    Properties:
      AliasTarget:
        DNSName: !GetAtt SampleSpaDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # どの環境でも同じ値になる。https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget-1.html
      HostedZoneName: !FindInMap [EnvDomainNameMap, !Ref EnvName, HostedZoneName]
      Name: !FindInMap [EnvDomainNameMap, !Ref EnvName, DomainName]
      Type: A